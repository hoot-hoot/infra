# adminfe
Why is favicon loaded so many times?
client.css should be served with an appropriate MIME type.
Component&unit tests
Take ownership of caching of /real/client resources.
Good story about multiple versions of resources & long-term caching of the dependent resource
Comments
Fix strange Rollbar error when rebuilding
Have a default image before the profile picture loads.
Use client timezone in SSR otherwise React complains about time mismatches
Allow selection of a favicon in the site menu.
Tests for SSR
Reenable prod plugins and make prod builds with babel
Uploading images should auto-save them
Reordering of images should auto-save them
Location writing is very hard on mobile.
Deal with lack of precise position in some case - manually pick a position.

# sitefe
Also generate keywords. According to blog, and according to post
Humans.txt should contain data about the person, not base63
Fix strange Rollbar error when rebuilding
Use client timezone in SSR otherwise React complains about time mismatches
The order in which images is specified isn't maintained.
Bold when&where
When it's too small allow a larger height for when&where
Looks strange on mobile when viewport is not high enough!
Perhaps make the google embeded map discard accounts so it's not confusing.
Just drop the cookie-based sitefe thing & register 1 or 3 test domains locally to always be used
Slide when swiping left or right in the carousel?
Add a "powered by truspar" logo

# Identity
Return user info if there is any in the getSession API! - super important
Just have a getSession method which retrieves the session _and_ user depending on whether the auth0 info is present or not.
Some sort of tests that when credentials are passed in, the same credentials are obtained. A method won't change the credentials - cookie store etc.
What to do with a session that does not exist? Pops up a lot in testing.
Testing for api-gateway-router
Error checking for the fetch for api-gateway-router
Add tests for cache behaviour.

# Content
Add an index on events.current_active_subdomain and try public lookups through that, and only when it fails try through the join table. On the common case it'll be just one index lookup + tree lookup rather than one index lookup + tree lookup + tree lookup.
Better marshalling for the display info.
Use hashids instead of the current hash for starter domain names.

# End-To-End
Tests with Chrome/Firefox/Edge/Safari/IE11 on Win/Linux/MacOS
Tests that all the requests that are made are to _our_ domain or a whitelist of external domains.
Tests that content that is too big json-wise gets rejected
Factor out hosts into constants.
Test that some paths have sessions while others don't (/real/client or /robots etc)
Test that cookies are samesite=lax

# Global
Have a story for unified sessions across services. Probably some iframe+postmessage stuff OR some CORS stuff.
Mark some volumes as read-only (node_modules, build, src etc.)
Update to docker-compose v3 syntax
Tests which depend on time implicitly should have Date.now mocked!
Limits for all fields, especially free-form ones. Enforce at marshaller level. Also update adminfe title editor with this stuff.
MessageWith0Arg<value marshaller> marshaller.
Make all fetches from the interface cancellable and cancel them in componentDidUnmount();
Use lighthouse - https://developers.google.com/web/tools/lighthouse/
Revert to secure weburis for Auth0Profile & User pictureUris.
Move the common stuff in the identity & content routers to the application. It's all an API no?
Add the concept of "tier". adminfe and sitefe are frontend and identity and content are backend?
Add separate GMaps API keys for the sitefe and adminfe. Limit them by referers.
Proper Auth0 setup for all environments!

#infra

Make the setup-hosts script idempotent
Remove all errant console.logs
Better strategy for logging.
Across the board clients should accept a port
SSL internally as well. Cause for now, we're using SSL only externally.
Correct structure to the api-gateway wrt origins!
Update allowedPaths with /company ones as well!
Force HTTPS at loadbalancer level https://stackoverflow.com/questions/37001557/how-to-force-ssl-for-kubernetes-ingress-on-gke
Annotate infrastructure with version of infrastructure package they were built/updated at
Annotate resources in k8s the same way
VPN & internal only routing of *.truesparrow.chmsqrt2.io - these should just be internal, and not externally accessible! Redirects should work for Auth0 though!
Before prod rename everything via chm-sqrt2->chmsqrt2
Google auth proper configuration for Auth0
Complete all FB app details for all environments!
Automatic certificate renewal as a periodic Travis CI build task
Don't allow _acme-challange as a DNS domain
Investigate moving to minikube & local Kubernetes from docker-compose.
Get rid of default k8s backend for loadbalancers
Better structure for the envs - everything not secret should be source-controlled
Internationalization of Auth0 & Filepicker
No downtime push to staging or live
